% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/multitest.R
\name{multitest}
\alias{multitest}
\title{Create and run multiple instances of a test}
\usage{
multitest(data, dependent, problem = c("classification", "regression"),
  method = c("randomForest", "rpart"), name, description = "",
  data_transform = identity, iterations = 10, holdout = 0.2,
  cross_validation = FALSE, preserve_distribution = FALSE)
}
\arguments{
\item{dependent}{The dependent variable: the name of the column containing the prediction goal}

\item{problem}{Either classification or regression. This influences how the algorithms are trained}

\item{method}{The regression or classification method}

\item{description}{Optional. A more elaborate description of the test}

\item{data_transform}{A function that transforms the data.}

\item{iterations}{The number of times the test is to be performed. If cross-validation is used, this is the number of folds}

\item{holdout}{Sample testing only. The fraction of data to be used as holdout set}

\item{cross_validation}{Logical. Should cross validation be used?}

\item{preserve_distribution}{Logical, classification problems only. Should the distribution of factors in the dependent variable be as similar as possible between holdout and training sets?}
}
\value{
A list of class \code{'multitest_results_' + problem}, containing the test results of each iteration
}
\description{
Wrapper for creating multiple copies of a test and running them. This function supports cross validation and regular sampling. Cross validation splits the data into 'iterations' number of folds, and uses one fold as holdout, using every other fold as training set. This is repeated 'iteration's times, using every fold as holdout exactly once. Non-cross validation takes a random sample of size holdout * nrow(data) and uses it as holdout, the rest is used for training. This is repeated 'iteration's times. Test creation and execution is handled by \code{\link{create_and_run_test}}
}

